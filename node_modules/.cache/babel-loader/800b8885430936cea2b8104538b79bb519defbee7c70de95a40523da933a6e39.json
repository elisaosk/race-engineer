{"ast":null,"code":"import _slicedToArray from\"/Users/elisajo/Documents/Hobby/race-engineer/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useRef}from'react';import{Formik,Field,Form,ErrorMessage}from\"formik\";import{Box,Input,Checkbox,Divider,Button}from\"@chakra-ui/react\";// import { Button } from '../stories/Button';\n// import { Colors } from '../theme/colors';\n// import \"../theme/styles.css\"\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Calculator(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rows=_useState2[0],setRows=_useState2[1];// const StyledTableCell = styled(TableCell)(({ theme }) => ({\n//     [`&.${tableCellClasses.head}`]: {\n//       backgroundColor: theme.palette.common.black,\n//       color: theme.palette.common.white,\n//     },\n//     [`&.${tableCellClasses.body}`]: {\n//       fontSize: 14,\n//     },\n//   }));\n//   const StyledTableRow = styled(TableRow)(({ theme }) => ({\n//     '&:nth-of-type(odd)': {\n//       backgroundColor: theme.palette.action.hover,\n//     },\n//     // hide last border\n//     '&:last-child td, &:last-child th': {\n//       border: 0,\n//     },\n//   }));\nvar getNumOfPits=function getNumOfPits(max,num){if(num/max%1==0){return num/max-1;}else return Math.floor(num/max);};var sortData=function sortData(data,key,limit){var sortedData=data.sort(function(a,b){return a[key]-b[key];});return sortedData.slice(0,limit);};var calculatePitStrategy=function calculatePitStrategy(avgSoftTime,avgMedTime,avgHardTime,sMax,mMax,hMax,sRequired,mRequired,hRequired,pitTime,totalLaps){var numOfSoftLaps=0;var numOfMedLaps=0;var numOfHardLaps=0;var possibleStrats=[];for(var i=sRequired?1:0;i<=totalLaps;i++){numOfSoftLaps=i;for(var j=mRequired?1:0;j<=totalLaps;j++){numOfMedLaps=j;for(var k=hRequired?1:0;k<=totalLaps;k++){numOfHardLaps=k;if(numOfSoftLaps+numOfMedLaps+numOfHardLaps===parseInt(totalLaps)){var numOfSPits=getNumOfPits(sMax,numOfSoftLaps);var numOfMPits=getNumOfPits(mMax,numOfMedLaps);var numOfHPits=getNumOfPits(hMax,numOfHardLaps);var numOfPits=2+numOfSPits+numOfMPits+numOfHPits;var totalTime=numOfSoftLaps*avgSoftTime+numOfMedLaps*avgMedTime+numOfHardLaps*avgHardTime+numOfPits*pitTime;possibleStrats.push({soft:numOfSoftLaps,medium:numOfMedLaps,hard:numOfHardLaps,pits:numOfPits,total:totalTime});}}}}possibleStrats=sortData(possibleStrats,\"total\",30);return possibleStrats;};// const rows = calculatePitStrategy(avgSoftTime,avgMedTime,avgHardTime,sMax,mMax,hMax,pitTime,totalLaps)\nvar handleSubmit=function handleSubmit(values,props){setRows(calculatePitStrategy(values.softTime/60,values.medTime/60,values.hardTime/60,values.sMax,values.mMax,values.hMax,values.sRequired,values.mRequired,values.hRequired,values.pitTime/60,values.totalLaps));// props.resetForm();\n};var initialValues={softTime:\"\",medTime:\"\",hardTime:\"\",sRequired:false,mRequired:true,hRequired:true,sMax:\"\",mMax:\"\",hMax:\"\",pitTime:\"\",totalLaps:\"\"};return/*#__PURE__*/ (// <Grid container spacing={2} backgroundColor={Colors.light} height=\"100vh\">\n//     <Grid item xs={12} md={4} backgroundColor={Colors.light}>\n_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,onSubmit:handleSubmit,children:function children(props){var values=props.values,handleSubmit=props.handleSubmit,handleBlur=props.handleBlur,setFieldValue=props.setFieldValue,handleChange=props.handleChange,validateOnBlur=props.validateOnBlur,resetForm=props.resetForm,errors=props.errors,touched=props.touched,isValidating=props.isValidating;return/*#__PURE__*/_jsx(Form,{onSubmit:function onSubmit(e){e.preventDefault();handleSubmit(e);},children:/*#__PURE__*/_jsxs(Box,{padding:\"30px\",display:\"flex\",flexDirection:\"column\",height:\"100%\",children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Field,{as:Input,color:\"secondary\",label:\"Average lap time soft (sec)\",type:\"number\",name:\"softTime\",width:\"30%\",variant:\"outlined\",margin:\"dense\",autoComplete:\"off\",helperText:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"}),error:props.errors.email&&props.touched.email}),/*#__PURE__*/_jsx(Field,{as:Input,color:\"secondary\",label:\"Longest stint (laps)\",type:\"number\",name:\"sMax\",width:\"10%\",variant:\"outlined\",margin:\"dense\",autoComplete:\"off\",helperText:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"}),error:props.errors.email&&props.touched.email}),/*#__PURE__*/_jsx(Checkbox,{name:\"sRequired\",onChange:function onChange(e){return props.setFieldValue(\"sRequired\",e.target.checked);},checked:props.values.sRequired,sx:{color:\"#393e46\",'&.Mui-checked':{color:\"#66D893\"}},children:\"Required\"})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Field,{as:Input,color:\"secondary\",label:\"Average lap time medium (sec)\",type:\"number\",name:\"medTime\",width:\"80%\",variant:\"outlined\",margin:\"dense\",autoComplete:\"off\",helperText:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"}),error:props.errors.email&&props.touched.email}),/*#__PURE__*/_jsx(Field,{as:Input,color:\"secondary\",label:\"Longest stint (laps)\",type:\"number\",name:\"mMax\",width:\"20%\",variant:\"outlined\",margin:\"dense\",autoComplete:\"off\",helperText:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"}),error:props.errors.email&&props.touched.email}),/*#__PURE__*/_jsx(Checkbox,{name:\"mRequired\",onChange:function onChange(e){return props.setFieldValue(\"mRequired\",e.target.checked);},checked:props.values.mRequired,sx:{color:\"#393e46\",'&.Mui-checked':{color:\"#66D893\"}},children:\"Required\"})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Field,{as:Input,color:\"secondary\",label:\"Average lap time hard (sec)\",type:\"number\",name:\"hardTime\",width:\"80%\",variant:\"outlined\",margin:\"dense\",autoComplete:\"off\",helperText:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"}),error:props.errors.email&&props.touched.email}),/*#__PURE__*/_jsx(Field,{as:Input,color:\"secondary\",label:\"Longest stint (laps)\",type:\"number\",name:\"hMax\",width:\"20%\",variant:\"outlined\",margin:\"dense\",autoComplete:\"off\",helperText:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"}),error:props.errors.email&&props.touched.email}),/*#__PURE__*/_jsx(Checkbox,{name:\"hRequired\",onChange:function onChange(e){return props.setFieldValue(\"hRequired\",e.target.checked);},checked:props.values.hRequired,sx:{color:\"#393e46\",'&.Mui-checked':{color:\"#66D893\"}},children:\"Required\"})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Field,{as:Input,value:props.values.pitTime,color:\"secondary\",label:\"Average pit delay (sec)\",type:\"number\",name:\"pitTime\",width:\"90%\",variant:\"outlined\",margin:\"dense\",autoComplete:\"off\",helperText:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"}),error:props.errors.email&&props.touched.email}),/*#__PURE__*/_jsx(Field,{as:Input,value:props.values.totalLaps,color:\"secondary\",label:\"Total number of race laps\",type:\"number\",name:\"totalLaps\",width:\"90%\",variant:\"outlined\",margin:\"dense\",autoComplete:\"off\",helperText:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"}),error:props.errors.email&&props.touched.email}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Button,{primary:false,label:\"Reset\",onClick:function onClick(){resetForm();setRows([]);},children:\"Reset\"}),/*#__PURE__*/_jsx(Button,{primary:true,type:\"submit\",label:\"Calculate\"//   onClick={()=>handleSubmit(values)}\n})]})]})});}})})// </Grid>\n);}export default Calculator;","map":{"version":3,"names":["React","useState","useRef","Formik","Field","Form","ErrorMessage","Box","Input","Checkbox","Divider","Button","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Calculator","_useState","_useState2","_slicedToArray","rows","setRows","getNumOfPits","max","num","Math","floor","sortData","data","key","limit","sortedData","sort","a","b","slice","calculatePitStrategy","avgSoftTime","avgMedTime","avgHardTime","sMax","mMax","hMax","sRequired","mRequired","hRequired","pitTime","totalLaps","numOfSoftLaps","numOfMedLaps","numOfHardLaps","possibleStrats","i","j","k","parseInt","numOfSPits","numOfMPits","numOfHPits","numOfPits","totalTime","push","soft","medium","hard","pits","total","handleSubmit","values","props","softTime","medTime","hardTime","initialValues","children","onSubmit","handleBlur","setFieldValue","handleChange","validateOnBlur","resetForm","errors","touched","isValidating","e","preventDefault","padding","display","flexDirection","height","justifyContent","as","color","label","type","name","width","variant","margin","autoComplete","helperText","error","email","onChange","target","checked","sx","value","primary","onClick"],"sources":["/Users/elisajo/Documents/Hobby/race-engineer/src/components/Calculator.js"],"sourcesContent":["import React ,{useState, useRef} from 'react'\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport {Box, Input, Checkbox, Divider, Button} from \"@chakra-ui/react\"\n// import { Button } from '../stories/Button';\n// import { Colors } from '../theme/colors';\n// import \"../theme/styles.css\"\n\n\nfunction Calculator() {\n\n    const [rows,setRows] = useState([])\n\n    // const StyledTableCell = styled(TableCell)(({ theme }) => ({\n    //     [`&.${tableCellClasses.head}`]: {\n    //       backgroundColor: theme.palette.common.black,\n    //       color: theme.palette.common.white,\n    //     },\n    //     [`&.${tableCellClasses.body}`]: {\n    //       fontSize: 14,\n    //     },\n    //   }));\n      \n    //   const StyledTableRow = styled(TableRow)(({ theme }) => ({\n    //     '&:nth-of-type(odd)': {\n    //       backgroundColor: theme.palette.action.hover,\n    //     },\n    //     // hide last border\n    //     '&:last-child td, &:last-child th': {\n    //       border: 0,\n    //     },\n    //   }));\n      \n\n    const getNumOfPits = (max,num) => {\n        if((num/max)%1 == 0){\n            return (num/max) - 1\n        } else return Math.floor(num/max)\n    }\n\n    const sortData = (data, key,limit) => {\n        let sortedData = data.sort(function(a,b){\n            return a[key] - b[key];\n          })\n          return sortedData.slice(0,limit)\n    }\n\n    const calculatePitStrategy = (avgSoftTime,avgMedTime,avgHardTime,sMax,mMax,hMax,sRequired,mRequired,hRequired,pitTime, totalLaps) => {\n      let numOfSoftLaps = 0\n        let numOfMedLaps = 0\n        let numOfHardLaps = 0\n        let possibleStrats = []\n        for(let i = sRequired?1:0; i<=totalLaps;i++){\n            numOfSoftLaps = i\n            for(let j = mRequired?1:0;j<=totalLaps;j++){\n                numOfMedLaps=j\n                for(let k = hRequired?1:0;k<=totalLaps;k++){\n                    numOfHardLaps = k\n                    if(numOfSoftLaps+numOfMedLaps+numOfHardLaps === parseInt(totalLaps)){\n                        let numOfSPits = getNumOfPits(sMax, numOfSoftLaps)\n                        let numOfMPits = getNumOfPits(mMax, numOfMedLaps)\n                        let numOfHPits = getNumOfPits(hMax, numOfHardLaps)\n                        let numOfPits = 2+numOfSPits+numOfMPits+numOfHPits\n                        let totalTime = numOfSoftLaps*avgSoftTime+numOfMedLaps*avgMedTime+numOfHardLaps*avgHardTime+numOfPits*pitTime\n                        possibleStrats.push({\n                            soft: numOfSoftLaps,\n                            medium: numOfMedLaps,\n                            hard: numOfHardLaps,\n                            pits: numOfPits,\n                            total:totalTime\n                        })\n                    }\n                }\n            }\n        }\n        possibleStrats = sortData(possibleStrats,\"total\",30)        \n        return possibleStrats\n    }\n\n    // const rows = calculatePitStrategy(avgSoftTime,avgMedTime,avgHardTime,sMax,mMax,hMax,pitTime,totalLaps)\n\n    const handleSubmit = (values, props) => {\n        setRows(calculatePitStrategy(values.softTime/60,values.medTime/60,values.hardTime/60,values.sMax,values.mMax,values.hMax,values.sRequired,values.mRequired,values.hRequired,values.pitTime/60,values.totalLaps))\n        // props.resetForm();\n      };\n\n    const initialValues = {\n        softTime:\"\",\n        medTime:\"\",\n        hardTime:\"\",\n        sRequired:false,\n        mRequired:true,\n        hRequired:true,\n        sMax:\"\",\n        mMax:\"\",\n        hMax:\"\",\n        pitTime:\"\",\n        totalLaps:\"\"\n    }\n\n\n\n  return (\n    // <Grid container spacing={2} backgroundColor={Colors.light} height=\"100vh\">\n    //     <Grid item xs={12} md={4} backgroundColor={Colors.light}>\n    <>\n        <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      {(props) => {\n        const {\n          values,\n          handleSubmit,\n          handleBlur,\n          setFieldValue,\n          handleChange,\n          validateOnBlur,\n          resetForm,\n          errors,\n          touched,\n          isValidating,\n        } = props;\n\n        return (\n          <Form onSubmit={(e) => {\n            e.preventDefault()\n            handleSubmit(e)\n            }} >\n            <Box padding=\"30px\" display=\"flex\" flexDirection={\"column\"} height=\"100%\">\n                <Box display=\"flex\" justifyContent={\"space-between\"}>\n                <Field\n                      as={Input}\n                      color=\"secondary\"\n                      label=\"Average lap time soft (sec)\"\n                      type=\"number\"\n                      name=\"softTime\"\n                      width=\"30%\"\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      autoComplete=\"off\"\n                      helperText={<ErrorMessage name=\"email\" />}\n                      error={props.errors.email && props.touched.email}\n                    />\n                    <Field\n                      as={Input}\n                      color=\"secondary\"\n                      label=\"Longest stint (laps)\"\n                      type=\"number\"\n                      name=\"sMax\"\n                      width=\"10%\"\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      autoComplete=\"off\"\n                      helperText={<ErrorMessage name=\"email\" />}\n                      error={props.errors.email && props.touched.email}\n                    />\n<Checkbox name=\"sRequired\" onChange={(e)=>props.setFieldValue(\"sRequired\",e.target.checked)} checked={props.values.sRequired} sx={{\n    color: \"#393e46\",\n    '&.Mui-checked': {\n      color: \"#66D893\",\n    },\n  }}>Required</Checkbox>\n                </Box>\n                    \n                <Box display=\"flex\" justifyContent={\"space-between\"} >\n<Field\n                      as={Input}\n                      color=\"secondary\"\n                      label=\"Average lap time medium (sec)\"\n                      type=\"number\"\n                      name=\"medTime\"\n                      width=\"80%\"\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      autoComplete=\"off\"\n                      helperText={<ErrorMessage name=\"email\" />}\n                      error={props.errors.email && props.touched.email}\n                    />\n                    <Field\n                      as={Input}\n                      color=\"secondary\"\n                      label=\"Longest stint (laps)\"\n                      type=\"number\"\n                      name=\"mMax\"\n                      width=\"20%\"\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      autoComplete=\"off\"\n                      helperText={<ErrorMessage name=\"email\" />}\n                      error={props.errors.email && props.touched.email}\n                    />\n                    <Checkbox name=\"mRequired\" onChange={(e)=>props.setFieldValue(\"mRequired\",e.target.checked)} checked={props.values.mRequired} sx={{\n    color: \"#393e46\",\n    '&.Mui-checked': {\n      color: \"#66D893\",\n    },\n  }}>Required</Checkbox>\n                </Box>\n                <Box display=\"flex\" justifyContent={\"space-between\"} >\n<Field\n                      as={Input}\n                      color=\"secondary\"\n                      label=\"Average lap time hard (sec)\"\n                      type=\"number\"\n                      name=\"hardTime\"\n                      width=\"80%\"\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      autoComplete=\"off\"\n                      helperText={<ErrorMessage name=\"email\" />}\n                      error={props.errors.email && props.touched.email}\n                    />\n                    <Field\n                      as={Input}\n                      color=\"secondary\"\n                      label=\"Longest stint (laps)\"\n                      type=\"number\"\n                      name=\"hMax\"\n                      width=\"20%\"\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      autoComplete=\"off\"\n                      helperText={<ErrorMessage name=\"email\" />}\n                      error={props.errors.email && props.touched.email}\n                    />\n                    <Checkbox name=\"hRequired\" onChange={(e)=>props.setFieldValue(\"hRequired\",e.target.checked)} checked={props.values.hRequired} sx={{\n    color: \"#393e46\",\n    '&.Mui-checked': {\n      color: \"#66D893\",\n    },\n  }}>Required</Checkbox>\n                </Box>\n                <Divider />\n                <Field\n                      as={Input}\n                      value={props.values.pitTime}\n                      color=\"secondary\"\n                      label=\"Average pit delay (sec)\"\n                      type=\"number\"\n                      name=\"pitTime\"\n                      width=\"90%\"\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      autoComplete=\"off\"\n                      helperText={<ErrorMessage name=\"email\" />}\n                      error={props.errors.email && props.touched.email}\n                    />\n                    <Field\n                      as={Input}\n                      value={props.values.totalLaps}\n                      color=\"secondary\"\n                      label=\"Total number of race laps\"\n                      type=\"number\"\n                      name=\"totalLaps\"\n                      width=\"90%\"\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      autoComplete=\"off\"\n                      helperText={<ErrorMessage name=\"email\" />}\n                      error={props.errors.email && props.touched.email}\n                    />\n\n                    <Box display=\"flex\" justifyContent={\"space-between\"}>\n                    <Button\n                      primary={false}\n                      label=\"Reset\"\n                      onClick={() => {\n                        resetForm()\n                        setRows([])\n                    }}\n                    >\n                      Reset\n                    </Button>\n                    <Button\n                      primary={true}\n                      type=\"submit\"\n                      label=\"Calculate\"\n                    //   onClick={()=>handleSubmit(values)}\n                    />\n                    </Box>\n\n                    \n\n            </Box>\n          </Form>\n        );\n      }}\n    </Formik>\n        {/* </Grid>\n        <Grid item xs={12} md={8} backgroundColor={Colors.darkGrey} display=\"flex\" flexDirection={\"column\"} justifyContent={\"center\"} > */}\n        \n       {/* {rows.length>0 ?\n       <TableContainer component={Paper}>\n       <Table sx={{ minWidth: 650 }} aria-label=\"customized table\">\n         <TableHead >\n           <StyledTableRow >\n             <StyledTableCell><Typography variant=\"subtitle2\" className='font-link'> RS laps </Typography></StyledTableCell>\n             <StyledTableCell ><Typography variant=\"subtitle2\" className='font-link'> RM laps </Typography></StyledTableCell>\n             <StyledTableCell ><Typography variant=\"subtitle2\" className='font-link'> RH laps </Typography></StyledTableCell>\n             <StyledTableCell align=\"right\"><Typography variant=\"subtitle2\" className='font-link'> Pits </Typography></StyledTableCell>\n             <StyledTableCell align=\"right\"><Typography variant=\"subtitle2\" className='font-link'> Total time </Typography></StyledTableCell>\n            <StyledTableCell align=\"right\"><Typography variant=\"subtitle2\" className='font-link'> Difference (sec)</Typography></StyledTableCell>\n          </StyledTableRow >\n         </TableHead>\n        <TableBody>\n           {rows.map((row,i) => (\n            <StyledTableRow \n              key={i}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <StyledTableCell component=\"th\" scope=\"row\" className='font-link'>\n                {row.soft}\n              </StyledTableCell >\n              <StyledTableCell className='font-link'>{row.medium}</StyledTableCell>\n              <StyledTableCell className='font-link'>{row.hard}</StyledTableCell>\n              <StyledTableCell align=\"right\" className='font-link'>{row.pits}</StyledTableCell>\n              <StyledTableCell align=\"right\" className='font-link'>{parseFloat(row.total.toPrecision(4))}</StyledTableCell>\n              <StyledTableCell align=\"right\" color=\"red\">\n              <Typography variant=\"body2\" color=\"red\" className='font-link'>\n              {i ===0 ? \"\" : \"+\" + parseFloat(((row.total-rows[0].total)*60).toPrecision(4))}\n            </Typography>\n              </StyledTableCell>\n            </StyledTableRow >\n          ))}\n        </TableBody>\n      </Table>\n      </TableContainer>\n      :\n      <Typography variant=\"h6\" color={Colors.light} className='font-link' > Fill in the form and click Calculate</Typography>\n      } */}\n   \n        </>\n    // </Grid>\n    \n\n    )\n}\n\nexport default Calculator"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}